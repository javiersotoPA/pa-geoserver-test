### WORKING

version: '3.9'

volumes:
   geoserver-data:
   geo-db-data:

services:
   db:  # this is the host name also when connecting to geoserver
      image: kartoza/postgis:${POSTGIS_VERSION_TAG}
      volumes:
        - geo-db-data:/var/lib/postgresql
        - ./site_level_info.sql:/docker-entrypoint-initdb.d/site_level_info.sql
      ports:
        - ${POSTGRES_PORT}:5432
      environment:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASS=${POSTGRES_PASS}
        - ALLOW_IP_RANGE=${ALLOW_IP_RANGE}
        - FORCE_SSL=TRUE
        - POSTGRES_MULTIPLE_EXTENSIONS=postgis,postgis_topology
      restart: on-failure
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]

   geoserver:  # when adding store, use SSL ALLOW mode
      image: kartoza/geoserver:${GS_VERSION}
      volumes:
        - geoserver-data:/opt/geoserver/data_dir
      restart: on-failure
      environment:
        - GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}
        - GEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR}
        - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
        - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
        - INITIAL_MEMORY=${INITIAL_MEMORY}
        - MAXIMUM_MEMORY=${MAXIMUM_MEMORY}
      depends_on:
        db:
          condition: service_healthy
      healthcheck:
        test: curl --fail -s http://localhost:8080/ || exit 1
        interval: 1m30s
        timeout: 10s
        retries: 3

   nginx:
     image: nginx
     volumes:
       - ./sites-enabled:/etc/nginx/conf.d:ro
     logging:
       driver: json-file
       options:
         max-size: 200m
         max-file: '10'
     depends_on:
       - geoserver
     ports:
       - "80:80"

