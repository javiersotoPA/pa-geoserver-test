version: '3.9'

volumes:
   geoserver-data:
   geo-db-data:

networks:
    backend:

services:
   db:
      image: kartoza/postgis:14-3.2
      volumes:
        - geo-db-data:/var/lib/postgresql
        - ./site_level_info.sql:/docker-entrypoint-initdb.d/site_level_info.sql
      #ports:
      #  - 5432:5432
      environment:
        - POSTGRES_DB=gis
        - POSTGRES_USER=docker
        - POSTGRES_PASS=docker
        - ALLOW_IP_RANGE=0.0.0.0/0
        - POSTGRES_MULTIPLE_EXTENSIONS=postgis,postgis_topology
      network_mode: "host"
      #networks:   ## network added by joe, solution did not work for me. I added network mode instead
      #      - backend
      restart: on-failure
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]

   geoserver:
      image: kartoza/geoserver:latest
      volumes:
        - geoserver-data:/opt/geoserver/data_dir
      #ports:
      #  - 8080:8080
      restart: on-failure
      environment:
        - GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}
        - GEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR}
        - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
        - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
        - INITIAL_MEMORY=${INITIAL_MEMORY}
        - MAXIMUM_MEMORY=${MAXIMUM_MEMORY}
      network_mode: "host"
      #networks:   ## network added by joe, solution did not work for me. I added network mode instead
      #  - backend
      depends_on:
        db:
          condition: service_healthy
      healthcheck:
        test: curl --fail -s http://localhost:8080/ || exit 1
        interval: 1m30s
        timeout: 10s
        retries: 3
